<?php
/**
 * PurchaseInvoice
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * (v1.0) Dynamics 365 Business Central
 *
 * (v1.0) Business Central Standard APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * PurchaseInvoice Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class PurchaseInvoice implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'purchaseInvoice';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'number' => 'string',
        'invoice_date' => '\DateTime',
        'due_date' => '\DateTime',
        'vendor_invoice_number' => 'string',
        'vendor_id' => 'string',
        'vendor_number' => 'string',
        'vendor_name' => 'string',
        'pay_to_name' => 'string',
        'pay_to_contact' => 'string',
        'pay_to_vendor_id' => 'string',
        'pay_to_vendor_number' => 'string',
        'ship_to_name' => 'string',
        'ship_to_contact' => 'string',
        'buy_from_address' => '\OpenAPI\Client\Model\Postaladdresstype',
        'pay_to_address' => '\OpenAPI\Client\Model\Postaladdresstype',
        'ship_to_address' => '\OpenAPI\Client\Model\Postaladdresstype',
        'currency_id' => 'string',
        'currency_code' => 'string',
        'prices_include_tax' => 'bool',
        'discount_amount' => 'float',
        'discount_applied_before_tax' => 'bool',
        'total_amount_excluding_tax' => 'float',
        'total_tax_amount' => 'float',
        'total_amount_including_tax' => 'float',
        'status' => 'string',
        'last_modified_date_time' => '\DateTime',
        'purchase_invoice_lines' => '\OpenAPI\Client\Model\PurchaseInvoiceLine[]',
        'pdf_document' => '\OpenAPI\Client\Model\PdfDocument[]',
        'vendor' => '\OpenAPI\Client\Model\Vendor',
        'currency' => '\OpenAPI\Client\Model\Currency'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'uuid',
        'number' => null,
        'invoice_date' => 'date-time',
        'due_date' => 'date-time',
        'vendor_invoice_number' => null,
        'vendor_id' => 'uuid',
        'vendor_number' => null,
        'vendor_name' => null,
        'pay_to_name' => null,
        'pay_to_contact' => null,
        'pay_to_vendor_id' => 'uuid',
        'pay_to_vendor_number' => null,
        'ship_to_name' => null,
        'ship_to_contact' => null,
        'buy_from_address' => null,
        'pay_to_address' => null,
        'ship_to_address' => null,
        'currency_id' => 'uuid',
        'currency_code' => null,
        'prices_include_tax' => null,
        'discount_amount' => 'decimal',
        'discount_applied_before_tax' => null,
        'total_amount_excluding_tax' => 'decimal',
        'total_tax_amount' => 'decimal',
        'total_amount_including_tax' => 'decimal',
        'status' => null,
        'last_modified_date_time' => 'date-time',
        'purchase_invoice_lines' => null,
        'pdf_document' => null,
        'vendor' => null,
        'currency' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'number' => 'number',
        'invoice_date' => 'invoiceDate',
        'due_date' => 'dueDate',
        'vendor_invoice_number' => 'vendorInvoiceNumber',
        'vendor_id' => 'vendorId',
        'vendor_number' => 'vendorNumber',
        'vendor_name' => 'vendorName',
        'pay_to_name' => 'payToName',
        'pay_to_contact' => 'payToContact',
        'pay_to_vendor_id' => 'payToVendorId',
        'pay_to_vendor_number' => 'payToVendorNumber',
        'ship_to_name' => 'shipToName',
        'ship_to_contact' => 'shipToContact',
        'buy_from_address' => 'buyFromAddress',
        'pay_to_address' => 'payToAddress',
        'ship_to_address' => 'shipToAddress',
        'currency_id' => 'currencyId',
        'currency_code' => 'currencyCode',
        'prices_include_tax' => 'pricesIncludeTax',
        'discount_amount' => 'discountAmount',
        'discount_applied_before_tax' => 'discountAppliedBeforeTax',
        'total_amount_excluding_tax' => 'totalAmountExcludingTax',
        'total_tax_amount' => 'totalTaxAmount',
        'total_amount_including_tax' => 'totalAmountIncludingTax',
        'status' => 'status',
        'last_modified_date_time' => 'lastModifiedDateTime',
        'purchase_invoice_lines' => 'purchaseInvoiceLines',
        'pdf_document' => 'pdfDocument',
        'vendor' => 'vendor',
        'currency' => 'currency'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'number' => 'setNumber',
        'invoice_date' => 'setInvoiceDate',
        'due_date' => 'setDueDate',
        'vendor_invoice_number' => 'setVendorInvoiceNumber',
        'vendor_id' => 'setVendorId',
        'vendor_number' => 'setVendorNumber',
        'vendor_name' => 'setVendorName',
        'pay_to_name' => 'setPayToName',
        'pay_to_contact' => 'setPayToContact',
        'pay_to_vendor_id' => 'setPayToVendorId',
        'pay_to_vendor_number' => 'setPayToVendorNumber',
        'ship_to_name' => 'setShipToName',
        'ship_to_contact' => 'setShipToContact',
        'buy_from_address' => 'setBuyFromAddress',
        'pay_to_address' => 'setPayToAddress',
        'ship_to_address' => 'setShipToAddress',
        'currency_id' => 'setCurrencyId',
        'currency_code' => 'setCurrencyCode',
        'prices_include_tax' => 'setPricesIncludeTax',
        'discount_amount' => 'setDiscountAmount',
        'discount_applied_before_tax' => 'setDiscountAppliedBeforeTax',
        'total_amount_excluding_tax' => 'setTotalAmountExcludingTax',
        'total_tax_amount' => 'setTotalTaxAmount',
        'total_amount_including_tax' => 'setTotalAmountIncludingTax',
        'status' => 'setStatus',
        'last_modified_date_time' => 'setLastModifiedDateTime',
        'purchase_invoice_lines' => 'setPurchaseInvoiceLines',
        'pdf_document' => 'setPdfDocument',
        'vendor' => 'setVendor',
        'currency' => 'setCurrency'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'number' => 'getNumber',
        'invoice_date' => 'getInvoiceDate',
        'due_date' => 'getDueDate',
        'vendor_invoice_number' => 'getVendorInvoiceNumber',
        'vendor_id' => 'getVendorId',
        'vendor_number' => 'getVendorNumber',
        'vendor_name' => 'getVendorName',
        'pay_to_name' => 'getPayToName',
        'pay_to_contact' => 'getPayToContact',
        'pay_to_vendor_id' => 'getPayToVendorId',
        'pay_to_vendor_number' => 'getPayToVendorNumber',
        'ship_to_name' => 'getShipToName',
        'ship_to_contact' => 'getShipToContact',
        'buy_from_address' => 'getBuyFromAddress',
        'pay_to_address' => 'getPayToAddress',
        'ship_to_address' => 'getShipToAddress',
        'currency_id' => 'getCurrencyId',
        'currency_code' => 'getCurrencyCode',
        'prices_include_tax' => 'getPricesIncludeTax',
        'discount_amount' => 'getDiscountAmount',
        'discount_applied_before_tax' => 'getDiscountAppliedBeforeTax',
        'total_amount_excluding_tax' => 'getTotalAmountExcludingTax',
        'total_tax_amount' => 'getTotalTaxAmount',
        'total_amount_including_tax' => 'getTotalAmountIncludingTax',
        'status' => 'getStatus',
        'last_modified_date_time' => 'getLastModifiedDateTime',
        'purchase_invoice_lines' => 'getPurchaseInvoiceLines',
        'pdf_document' => 'getPdfDocument',
        'vendor' => 'getVendor',
        'currency' => 'getCurrency'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['number'] = $data['number'] ?? null;
        $this->container['invoice_date'] = $data['invoice_date'] ?? null;
        $this->container['due_date'] = $data['due_date'] ?? null;
        $this->container['vendor_invoice_number'] = $data['vendor_invoice_number'] ?? null;
        $this->container['vendor_id'] = $data['vendor_id'] ?? null;
        $this->container['vendor_number'] = $data['vendor_number'] ?? null;
        $this->container['vendor_name'] = $data['vendor_name'] ?? null;
        $this->container['pay_to_name'] = $data['pay_to_name'] ?? null;
        $this->container['pay_to_contact'] = $data['pay_to_contact'] ?? null;
        $this->container['pay_to_vendor_id'] = $data['pay_to_vendor_id'] ?? null;
        $this->container['pay_to_vendor_number'] = $data['pay_to_vendor_number'] ?? null;
        $this->container['ship_to_name'] = $data['ship_to_name'] ?? null;
        $this->container['ship_to_contact'] = $data['ship_to_contact'] ?? null;
        $this->container['buy_from_address'] = $data['buy_from_address'] ?? null;
        $this->container['pay_to_address'] = $data['pay_to_address'] ?? null;
        $this->container['ship_to_address'] = $data['ship_to_address'] ?? null;
        $this->container['currency_id'] = $data['currency_id'] ?? null;
        $this->container['currency_code'] = $data['currency_code'] ?? null;
        $this->container['prices_include_tax'] = $data['prices_include_tax'] ?? null;
        $this->container['discount_amount'] = $data['discount_amount'] ?? null;
        $this->container['discount_applied_before_tax'] = $data['discount_applied_before_tax'] ?? null;
        $this->container['total_amount_excluding_tax'] = $data['total_amount_excluding_tax'] ?? null;
        $this->container['total_tax_amount'] = $data['total_tax_amount'] ?? null;
        $this->container['total_amount_including_tax'] = $data['total_amount_including_tax'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['last_modified_date_time'] = $data['last_modified_date_time'] ?? null;
        $this->container['purchase_invoice_lines'] = $data['purchase_invoice_lines'] ?? null;
        $this->container['pdf_document'] = $data['pdf_document'] ?? null;
        $this->container['vendor'] = $data['vendor'] ?? null;
        $this->container['currency'] = $data['currency'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['number']) && (mb_strlen($this->container['number']) > 20)) {
            $invalidProperties[] = "invalid value for 'number', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['vendor_invoice_number']) && (mb_strlen($this->container['vendor_invoice_number']) > 35)) {
            $invalidProperties[] = "invalid value for 'vendor_invoice_number', the character length must be smaller than or equal to 35.";
        }

        if (!is_null($this->container['vendor_number']) && (mb_strlen($this->container['vendor_number']) > 20)) {
            $invalidProperties[] = "invalid value for 'vendor_number', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['vendor_name']) && (mb_strlen($this->container['vendor_name']) > 100)) {
            $invalidProperties[] = "invalid value for 'vendor_name', the character length must be smaller than or equal to 100.";
        }

        if (!is_null($this->container['pay_to_name']) && (mb_strlen($this->container['pay_to_name']) > 100)) {
            $invalidProperties[] = "invalid value for 'pay_to_name', the character length must be smaller than or equal to 100.";
        }

        if (!is_null($this->container['pay_to_contact']) && (mb_strlen($this->container['pay_to_contact']) > 100)) {
            $invalidProperties[] = "invalid value for 'pay_to_contact', the character length must be smaller than or equal to 100.";
        }

        if (!is_null($this->container['pay_to_vendor_number']) && (mb_strlen($this->container['pay_to_vendor_number']) > 20)) {
            $invalidProperties[] = "invalid value for 'pay_to_vendor_number', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['ship_to_name']) && (mb_strlen($this->container['ship_to_name']) > 100)) {
            $invalidProperties[] = "invalid value for 'ship_to_name', the character length must be smaller than or equal to 100.";
        }

        if (!is_null($this->container['ship_to_contact']) && (mb_strlen($this->container['ship_to_contact']) > 100)) {
            $invalidProperties[] = "invalid value for 'ship_to_contact', the character length must be smaller than or equal to 100.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id (v1.0) The id property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets number
     *
     * @return string|null
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     *
     * @param string|null $number (v1.0) The number property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setNumber($number)
    {
        if (!is_null($number) && (mb_strlen($number) > 20)) {
            throw new \InvalidArgumentException('invalid length for $number when calling PurchaseInvoice., must be smaller than or equal to 20.');
        }

        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets invoice_date
     *
     * @return \DateTime|null
     */
    public function getInvoiceDate()
    {
        return $this->container['invoice_date'];
    }

    /**
     * Sets invoice_date
     *
     * @param \DateTime|null $invoice_date (v1.0) The invoiceDate property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setInvoiceDate($invoice_date)
    {
        $this->container['invoice_date'] = $invoice_date;

        return $this;
    }

    /**
     * Gets due_date
     *
     * @return \DateTime|null
     */
    public function getDueDate()
    {
        return $this->container['due_date'];
    }

    /**
     * Sets due_date
     *
     * @param \DateTime|null $due_date (v1.0) The dueDate property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setDueDate($due_date)
    {
        $this->container['due_date'] = $due_date;

        return $this;
    }

    /**
     * Gets vendor_invoice_number
     *
     * @return string|null
     */
    public function getVendorInvoiceNumber()
    {
        return $this->container['vendor_invoice_number'];
    }

    /**
     * Sets vendor_invoice_number
     *
     * @param string|null $vendor_invoice_number (v1.0) The vendorInvoiceNumber property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setVendorInvoiceNumber($vendor_invoice_number)
    {
        if (!is_null($vendor_invoice_number) && (mb_strlen($vendor_invoice_number) > 35)) {
            throw new \InvalidArgumentException('invalid length for $vendor_invoice_number when calling PurchaseInvoice., must be smaller than or equal to 35.');
        }

        $this->container['vendor_invoice_number'] = $vendor_invoice_number;

        return $this;
    }

    /**
     * Gets vendor_id
     *
     * @return string|null
     */
    public function getVendorId()
    {
        return $this->container['vendor_id'];
    }

    /**
     * Sets vendor_id
     *
     * @param string|null $vendor_id (v1.0) The vendorId property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setVendorId($vendor_id)
    {
        $this->container['vendor_id'] = $vendor_id;

        return $this;
    }

    /**
     * Gets vendor_number
     *
     * @return string|null
     */
    public function getVendorNumber()
    {
        return $this->container['vendor_number'];
    }

    /**
     * Sets vendor_number
     *
     * @param string|null $vendor_number (v1.0) The vendorNumber property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setVendorNumber($vendor_number)
    {
        if (!is_null($vendor_number) && (mb_strlen($vendor_number) > 20)) {
            throw new \InvalidArgumentException('invalid length for $vendor_number when calling PurchaseInvoice., must be smaller than or equal to 20.');
        }

        $this->container['vendor_number'] = $vendor_number;

        return $this;
    }

    /**
     * Gets vendor_name
     *
     * @return string|null
     */
    public function getVendorName()
    {
        return $this->container['vendor_name'];
    }

    /**
     * Sets vendor_name
     *
     * @param string|null $vendor_name (v1.0) The vendorName property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setVendorName($vendor_name)
    {
        if (!is_null($vendor_name) && (mb_strlen($vendor_name) > 100)) {
            throw new \InvalidArgumentException('invalid length for $vendor_name when calling PurchaseInvoice., must be smaller than or equal to 100.');
        }

        $this->container['vendor_name'] = $vendor_name;

        return $this;
    }

    /**
     * Gets pay_to_name
     *
     * @return string|null
     */
    public function getPayToName()
    {
        return $this->container['pay_to_name'];
    }

    /**
     * Sets pay_to_name
     *
     * @param string|null $pay_to_name (v1.0) The payToName property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setPayToName($pay_to_name)
    {
        if (!is_null($pay_to_name) && (mb_strlen($pay_to_name) > 100)) {
            throw new \InvalidArgumentException('invalid length for $pay_to_name when calling PurchaseInvoice., must be smaller than or equal to 100.');
        }

        $this->container['pay_to_name'] = $pay_to_name;

        return $this;
    }

    /**
     * Gets pay_to_contact
     *
     * @return string|null
     */
    public function getPayToContact()
    {
        return $this->container['pay_to_contact'];
    }

    /**
     * Sets pay_to_contact
     *
     * @param string|null $pay_to_contact (v1.0) The payToContact property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setPayToContact($pay_to_contact)
    {
        if (!is_null($pay_to_contact) && (mb_strlen($pay_to_contact) > 100)) {
            throw new \InvalidArgumentException('invalid length for $pay_to_contact when calling PurchaseInvoice., must be smaller than or equal to 100.');
        }

        $this->container['pay_to_contact'] = $pay_to_contact;

        return $this;
    }

    /**
     * Gets pay_to_vendor_id
     *
     * @return string|null
     */
    public function getPayToVendorId()
    {
        return $this->container['pay_to_vendor_id'];
    }

    /**
     * Sets pay_to_vendor_id
     *
     * @param string|null $pay_to_vendor_id (v1.0) The payToVendorId property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setPayToVendorId($pay_to_vendor_id)
    {
        $this->container['pay_to_vendor_id'] = $pay_to_vendor_id;

        return $this;
    }

    /**
     * Gets pay_to_vendor_number
     *
     * @return string|null
     */
    public function getPayToVendorNumber()
    {
        return $this->container['pay_to_vendor_number'];
    }

    /**
     * Sets pay_to_vendor_number
     *
     * @param string|null $pay_to_vendor_number (v1.0) The payToVendorNumber property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setPayToVendorNumber($pay_to_vendor_number)
    {
        if (!is_null($pay_to_vendor_number) && (mb_strlen($pay_to_vendor_number) > 20)) {
            throw new \InvalidArgumentException('invalid length for $pay_to_vendor_number when calling PurchaseInvoice., must be smaller than or equal to 20.');
        }

        $this->container['pay_to_vendor_number'] = $pay_to_vendor_number;

        return $this;
    }

    /**
     * Gets ship_to_name
     *
     * @return string|null
     */
    public function getShipToName()
    {
        return $this->container['ship_to_name'];
    }

    /**
     * Sets ship_to_name
     *
     * @param string|null $ship_to_name (v1.0) The shipToName property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setShipToName($ship_to_name)
    {
        if (!is_null($ship_to_name) && (mb_strlen($ship_to_name) > 100)) {
            throw new \InvalidArgumentException('invalid length for $ship_to_name when calling PurchaseInvoice., must be smaller than or equal to 100.');
        }

        $this->container['ship_to_name'] = $ship_to_name;

        return $this;
    }

    /**
     * Gets ship_to_contact
     *
     * @return string|null
     */
    public function getShipToContact()
    {
        return $this->container['ship_to_contact'];
    }

    /**
     * Sets ship_to_contact
     *
     * @param string|null $ship_to_contact (v1.0) The shipToContact property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setShipToContact($ship_to_contact)
    {
        if (!is_null($ship_to_contact) && (mb_strlen($ship_to_contact) > 100)) {
            throw new \InvalidArgumentException('invalid length for $ship_to_contact when calling PurchaseInvoice., must be smaller than or equal to 100.');
        }

        $this->container['ship_to_contact'] = $ship_to_contact;

        return $this;
    }

    /**
     * Gets buy_from_address
     *
     * @return \OpenAPI\Client\Model\Postaladdresstype|null
     */
    public function getBuyFromAddress()
    {
        return $this->container['buy_from_address'];
    }

    /**
     * Sets buy_from_address
     *
     * @param \OpenAPI\Client\Model\Postaladdresstype|null $buy_from_address buy_from_address
     *
     * @return self
     */
    public function setBuyFromAddress($buy_from_address)
    {
        $this->container['buy_from_address'] = $buy_from_address;

        return $this;
    }

    /**
     * Gets pay_to_address
     *
     * @return \OpenAPI\Client\Model\Postaladdresstype|null
     */
    public function getPayToAddress()
    {
        return $this->container['pay_to_address'];
    }

    /**
     * Sets pay_to_address
     *
     * @param \OpenAPI\Client\Model\Postaladdresstype|null $pay_to_address pay_to_address
     *
     * @return self
     */
    public function setPayToAddress($pay_to_address)
    {
        $this->container['pay_to_address'] = $pay_to_address;

        return $this;
    }

    /**
     * Gets ship_to_address
     *
     * @return \OpenAPI\Client\Model\Postaladdresstype|null
     */
    public function getShipToAddress()
    {
        return $this->container['ship_to_address'];
    }

    /**
     * Sets ship_to_address
     *
     * @param \OpenAPI\Client\Model\Postaladdresstype|null $ship_to_address ship_to_address
     *
     * @return self
     */
    public function setShipToAddress($ship_to_address)
    {
        $this->container['ship_to_address'] = $ship_to_address;

        return $this;
    }

    /**
     * Gets currency_id
     *
     * @return string|null
     */
    public function getCurrencyId()
    {
        return $this->container['currency_id'];
    }

    /**
     * Sets currency_id
     *
     * @param string|null $currency_id (v1.0) The currencyId property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setCurrencyId($currency_id)
    {
        $this->container['currency_id'] = $currency_id;

        return $this;
    }

    /**
     * Gets currency_code
     *
     * @return string|null
     */
    public function getCurrencyCode()
    {
        return $this->container['currency_code'];
    }

    /**
     * Sets currency_code
     *
     * @param string|null $currency_code (v1.0) The currencyCode property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setCurrencyCode($currency_code)
    {
        $this->container['currency_code'] = $currency_code;

        return $this;
    }

    /**
     * Gets prices_include_tax
     *
     * @return bool|null
     */
    public function getPricesIncludeTax()
    {
        return $this->container['prices_include_tax'];
    }

    /**
     * Sets prices_include_tax
     *
     * @param bool|null $prices_include_tax (v1.0) The pricesIncludeTax property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setPricesIncludeTax($prices_include_tax)
    {
        $this->container['prices_include_tax'] = $prices_include_tax;

        return $this;
    }

    /**
     * Gets discount_amount
     *
     * @return float|null
     */
    public function getDiscountAmount()
    {
        return $this->container['discount_amount'];
    }

    /**
     * Sets discount_amount
     *
     * @param float|null $discount_amount (v1.0) The discountAmount property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setDiscountAmount($discount_amount)
    {
        $this->container['discount_amount'] = $discount_amount;

        return $this;
    }

    /**
     * Gets discount_applied_before_tax
     *
     * @return bool|null
     */
    public function getDiscountAppliedBeforeTax()
    {
        return $this->container['discount_applied_before_tax'];
    }

    /**
     * Sets discount_applied_before_tax
     *
     * @param bool|null $discount_applied_before_tax (v1.0) The discountAppliedBeforeTax property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setDiscountAppliedBeforeTax($discount_applied_before_tax)
    {
        $this->container['discount_applied_before_tax'] = $discount_applied_before_tax;

        return $this;
    }

    /**
     * Gets total_amount_excluding_tax
     *
     * @return float|null
     */
    public function getTotalAmountExcludingTax()
    {
        return $this->container['total_amount_excluding_tax'];
    }

    /**
     * Sets total_amount_excluding_tax
     *
     * @param float|null $total_amount_excluding_tax (v1.0) The totalAmountExcludingTax property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setTotalAmountExcludingTax($total_amount_excluding_tax)
    {
        $this->container['total_amount_excluding_tax'] = $total_amount_excluding_tax;

        return $this;
    }

    /**
     * Gets total_tax_amount
     *
     * @return float|null
     */
    public function getTotalTaxAmount()
    {
        return $this->container['total_tax_amount'];
    }

    /**
     * Sets total_tax_amount
     *
     * @param float|null $total_tax_amount (v1.0) The totalTaxAmount property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setTotalTaxAmount($total_tax_amount)
    {
        $this->container['total_tax_amount'] = $total_tax_amount;

        return $this;
    }

    /**
     * Gets total_amount_including_tax
     *
     * @return float|null
     */
    public function getTotalAmountIncludingTax()
    {
        return $this->container['total_amount_including_tax'];
    }

    /**
     * Sets total_amount_including_tax
     *
     * @param float|null $total_amount_including_tax (v1.0) The totalAmountIncludingTax property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setTotalAmountIncludingTax($total_amount_including_tax)
    {
        $this->container['total_amount_including_tax'] = $total_amount_including_tax;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string|null $status (v1.0) The status property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets last_modified_date_time
     *
     * @return \DateTime|null
     */
    public function getLastModifiedDateTime()
    {
        return $this->container['last_modified_date_time'];
    }

    /**
     * Sets last_modified_date_time
     *
     * @param \DateTime|null $last_modified_date_time (v1.0) The lastModifiedDateTime property for the Dynamics 365 Business Central purchaseInvoice entity
     *
     * @return self
     */
    public function setLastModifiedDateTime($last_modified_date_time)
    {
        $this->container['last_modified_date_time'] = $last_modified_date_time;

        return $this;
    }

    /**
     * Gets purchase_invoice_lines
     *
     * @return \OpenAPI\Client\Model\PurchaseInvoiceLine[]|null
     */
    public function getPurchaseInvoiceLines()
    {
        return $this->container['purchase_invoice_lines'];
    }

    /**
     * Sets purchase_invoice_lines
     *
     * @param \OpenAPI\Client\Model\PurchaseInvoiceLine[]|null $purchase_invoice_lines purchase_invoice_lines
     *
     * @return self
     */
    public function setPurchaseInvoiceLines($purchase_invoice_lines)
    {
        $this->container['purchase_invoice_lines'] = $purchase_invoice_lines;

        return $this;
    }

    /**
     * Gets pdf_document
     *
     * @return \OpenAPI\Client\Model\PdfDocument[]|null
     */
    public function getPdfDocument()
    {
        return $this->container['pdf_document'];
    }

    /**
     * Sets pdf_document
     *
     * @param \OpenAPI\Client\Model\PdfDocument[]|null $pdf_document pdf_document
     *
     * @return self
     */
    public function setPdfDocument($pdf_document)
    {
        $this->container['pdf_document'] = $pdf_document;

        return $this;
    }

    /**
     * Gets vendor
     *
     * @return \OpenAPI\Client\Model\Vendor|null
     */
    public function getVendor()
    {
        return $this->container['vendor'];
    }

    /**
     * Sets vendor
     *
     * @param \OpenAPI\Client\Model\Vendor|null $vendor vendor
     *
     * @return self
     */
    public function setVendor($vendor)
    {
        $this->container['vendor'] = $vendor;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return \OpenAPI\Client\Model\Currency|null
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param \OpenAPI\Client\Model\Currency|null $currency currency
     *
     * @return self
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


