<?php
/**
 * DefaultDimensions
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * (v1.0) Dynamics 365 Business Central
 *
 * (v1.0) Business Central Standard APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * DefaultDimensions Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class DefaultDimensions implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'defaultDimensions';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'parent_id' => 'string',
        'dimension_id' => 'string',
        'dimension_code' => 'string',
        'dimension_value_id' => 'string',
        'dimension_value_code' => 'string',
        'posting_validation' => 'string',
        'account' => '\OpenAPI\Client\Model\Account',
        'dimension' => '\OpenAPI\Client\Model\Dimension',
        'dimension_value' => '\OpenAPI\Client\Model\DimensionValue'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'parent_id' => 'uuid',
        'dimension_id' => 'uuid',
        'dimension_code' => null,
        'dimension_value_id' => 'uuid',
        'dimension_value_code' => null,
        'posting_validation' => null,
        'account' => null,
        'dimension' => null,
        'dimension_value' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'parent_id' => 'parentId',
        'dimension_id' => 'dimensionId',
        'dimension_code' => 'dimensionCode',
        'dimension_value_id' => 'dimensionValueId',
        'dimension_value_code' => 'dimensionValueCode',
        'posting_validation' => 'postingValidation',
        'account' => 'account',
        'dimension' => 'dimension',
        'dimension_value' => 'dimensionValue'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'parent_id' => 'setParentId',
        'dimension_id' => 'setDimensionId',
        'dimension_code' => 'setDimensionCode',
        'dimension_value_id' => 'setDimensionValueId',
        'dimension_value_code' => 'setDimensionValueCode',
        'posting_validation' => 'setPostingValidation',
        'account' => 'setAccount',
        'dimension' => 'setDimension',
        'dimension_value' => 'setDimensionValue'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'parent_id' => 'getParentId',
        'dimension_id' => 'getDimensionId',
        'dimension_code' => 'getDimensionCode',
        'dimension_value_id' => 'getDimensionValueId',
        'dimension_value_code' => 'getDimensionValueCode',
        'posting_validation' => 'getPostingValidation',
        'account' => 'getAccount',
        'dimension' => 'getDimension',
        'dimension_value' => 'getDimensionValue'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['parent_id'] = $data['parent_id'] ?? null;
        $this->container['dimension_id'] = $data['dimension_id'] ?? null;
        $this->container['dimension_code'] = $data['dimension_code'] ?? null;
        $this->container['dimension_value_id'] = $data['dimension_value_id'] ?? null;
        $this->container['dimension_value_code'] = $data['dimension_value_code'] ?? null;
        $this->container['posting_validation'] = $data['posting_validation'] ?? null;
        $this->container['account'] = $data['account'] ?? null;
        $this->container['dimension'] = $data['dimension'] ?? null;
        $this->container['dimension_value'] = $data['dimension_value'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['dimension_code']) && (mb_strlen($this->container['dimension_code']) > 20)) {
            $invalidProperties[] = "invalid value for 'dimension_code', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['dimension_value_code']) && (mb_strlen($this->container['dimension_value_code']) > 20)) {
            $invalidProperties[] = "invalid value for 'dimension_value_code', the character length must be smaller than or equal to 20.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets parent_id
     *
     * @return string|null
     */
    public function getParentId()
    {
        return $this->container['parent_id'];
    }

    /**
     * Sets parent_id
     *
     * @param string|null $parent_id (v1.0) The parentId property for the Dynamics 365 Business Central defaultDimensions entity
     *
     * @return self
     */
    public function setParentId($parent_id)
    {
        $this->container['parent_id'] = $parent_id;

        return $this;
    }

    /**
     * Gets dimension_id
     *
     * @return string|null
     */
    public function getDimensionId()
    {
        return $this->container['dimension_id'];
    }

    /**
     * Sets dimension_id
     *
     * @param string|null $dimension_id (v1.0) The dimensionId property for the Dynamics 365 Business Central defaultDimensions entity
     *
     * @return self
     */
    public function setDimensionId($dimension_id)
    {
        $this->container['dimension_id'] = $dimension_id;

        return $this;
    }

    /**
     * Gets dimension_code
     *
     * @return string|null
     */
    public function getDimensionCode()
    {
        return $this->container['dimension_code'];
    }

    /**
     * Sets dimension_code
     *
     * @param string|null $dimension_code (v1.0) The dimensionCode property for the Dynamics 365 Business Central defaultDimensions entity
     *
     * @return self
     */
    public function setDimensionCode($dimension_code)
    {
        if (!is_null($dimension_code) && (mb_strlen($dimension_code) > 20)) {
            throw new \InvalidArgumentException('invalid length for $dimension_code when calling DefaultDimensions., must be smaller than or equal to 20.');
        }

        $this->container['dimension_code'] = $dimension_code;

        return $this;
    }

    /**
     * Gets dimension_value_id
     *
     * @return string|null
     */
    public function getDimensionValueId()
    {
        return $this->container['dimension_value_id'];
    }

    /**
     * Sets dimension_value_id
     *
     * @param string|null $dimension_value_id (v1.0) The dimensionValueId property for the Dynamics 365 Business Central defaultDimensions entity
     *
     * @return self
     */
    public function setDimensionValueId($dimension_value_id)
    {
        $this->container['dimension_value_id'] = $dimension_value_id;

        return $this;
    }

    /**
     * Gets dimension_value_code
     *
     * @return string|null
     */
    public function getDimensionValueCode()
    {
        return $this->container['dimension_value_code'];
    }

    /**
     * Sets dimension_value_code
     *
     * @param string|null $dimension_value_code (v1.0) The dimensionValueCode property for the Dynamics 365 Business Central defaultDimensions entity
     *
     * @return self
     */
    public function setDimensionValueCode($dimension_value_code)
    {
        if (!is_null($dimension_value_code) && (mb_strlen($dimension_value_code) > 20)) {
            throw new \InvalidArgumentException('invalid length for $dimension_value_code when calling DefaultDimensions., must be smaller than or equal to 20.');
        }

        $this->container['dimension_value_code'] = $dimension_value_code;

        return $this;
    }

    /**
     * Gets posting_validation
     *
     * @return string|null
     */
    public function getPostingValidation()
    {
        return $this->container['posting_validation'];
    }

    /**
     * Sets posting_validation
     *
     * @param string|null $posting_validation (v1.0) The postingValidation property for the Dynamics 365 Business Central defaultDimensions entity
     *
     * @return self
     */
    public function setPostingValidation($posting_validation)
    {
        $this->container['posting_validation'] = $posting_validation;

        return $this;
    }

    /**
     * Gets account
     *
     * @return \OpenAPI\Client\Model\Account|null
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param \OpenAPI\Client\Model\Account|null $account account
     *
     * @return self
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets dimension
     *
     * @return \OpenAPI\Client\Model\Dimension|null
     */
    public function getDimension()
    {
        return $this->container['dimension'];
    }

    /**
     * Sets dimension
     *
     * @param \OpenAPI\Client\Model\Dimension|null $dimension dimension
     *
     * @return self
     */
    public function setDimension($dimension)
    {
        $this->container['dimension'] = $dimension;

        return $this;
    }

    /**
     * Gets dimension_value
     *
     * @return \OpenAPI\Client\Model\DimensionValue|null
     */
    public function getDimensionValue()
    {
        return $this->container['dimension_value'];
    }

    /**
     * Sets dimension_value
     *
     * @param \OpenAPI\Client\Model\DimensionValue|null $dimension_value dimension_value
     *
     * @return self
     */
    public function setDimensionValue($dimension_value)
    {
        $this->container['dimension_value'] = $dimension_value;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


