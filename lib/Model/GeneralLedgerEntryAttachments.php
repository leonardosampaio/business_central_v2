<?php
/**
 * GeneralLedgerEntryAttachments
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * (v1.0) Dynamics 365 Business Central
 *
 * (v1.0) Business Central Standard APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * GeneralLedgerEntryAttachments Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class GeneralLedgerEntryAttachments implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'generalLedgerEntryAttachments';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'general_ledger_entry_number' => 'int',
        'id' => 'string',
        'file_name' => 'string',
        'byte_size' => 'int',
        'content' => '\SplFileObject',
        'created_date_time' => '\DateTime',
        'general_ledger_entry' => '\OpenAPI\Client\Model\GeneralLedgerEntry'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'general_ledger_entry_number' => 'int32',
        'id' => 'uuid',
        'file_name' => null,
        'byte_size' => 'int32',
        'content' => 'binary',
        'created_date_time' => 'date-time',
        'general_ledger_entry' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'general_ledger_entry_number' => 'generalLedgerEntryNumber',
        'id' => 'id',
        'file_name' => 'fileName',
        'byte_size' => 'byteSize',
        'content' => 'content',
        'created_date_time' => 'createdDateTime',
        'general_ledger_entry' => 'generalLedgerEntry'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'general_ledger_entry_number' => 'setGeneralLedgerEntryNumber',
        'id' => 'setId',
        'file_name' => 'setFileName',
        'byte_size' => 'setByteSize',
        'content' => 'setContent',
        'created_date_time' => 'setCreatedDateTime',
        'general_ledger_entry' => 'setGeneralLedgerEntry'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'general_ledger_entry_number' => 'getGeneralLedgerEntryNumber',
        'id' => 'getId',
        'file_name' => 'getFileName',
        'byte_size' => 'getByteSize',
        'content' => 'getContent',
        'created_date_time' => 'getCreatedDateTime',
        'general_ledger_entry' => 'getGeneralLedgerEntry'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['general_ledger_entry_number'] = $data['general_ledger_entry_number'] ?? null;
        $this->container['id'] = $data['id'] ?? null;
        $this->container['file_name'] = $data['file_name'] ?? null;
        $this->container['byte_size'] = $data['byte_size'] ?? null;
        $this->container['content'] = $data['content'] ?? null;
        $this->container['created_date_time'] = $data['created_date_time'] ?? null;
        $this->container['general_ledger_entry'] = $data['general_ledger_entry'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['file_name']) && (mb_strlen($this->container['file_name']) > 250)) {
            $invalidProperties[] = "invalid value for 'file_name', the character length must be smaller than or equal to 250.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets general_ledger_entry_number
     *
     * @return int|null
     */
    public function getGeneralLedgerEntryNumber()
    {
        return $this->container['general_ledger_entry_number'];
    }

    /**
     * Sets general_ledger_entry_number
     *
     * @param int|null $general_ledger_entry_number (v1.0) The generalLedgerEntryNumber property for the Dynamics 365 Business Central generalLedgerEntryAttachments entity
     *
     * @return self
     */
    public function setGeneralLedgerEntryNumber($general_ledger_entry_number)
    {
        $this->container['general_ledger_entry_number'] = $general_ledger_entry_number;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id (v1.0) The id property for the Dynamics 365 Business Central generalLedgerEntryAttachments entity
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets file_name
     *
     * @return string|null
     */
    public function getFileName()
    {
        return $this->container['file_name'];
    }

    /**
     * Sets file_name
     *
     * @param string|null $file_name (v1.0) The fileName property for the Dynamics 365 Business Central generalLedgerEntryAttachments entity
     *
     * @return self
     */
    public function setFileName($file_name)
    {
        if (!is_null($file_name) && (mb_strlen($file_name) > 250)) {
            throw new \InvalidArgumentException('invalid length for $file_name when calling GeneralLedgerEntryAttachments., must be smaller than or equal to 250.');
        }

        $this->container['file_name'] = $file_name;

        return $this;
    }

    /**
     * Gets byte_size
     *
     * @return int|null
     */
    public function getByteSize()
    {
        return $this->container['byte_size'];
    }

    /**
     * Sets byte_size
     *
     * @param int|null $byte_size (v1.0) The byteSize property for the Dynamics 365 Business Central generalLedgerEntryAttachments entity
     *
     * @return self
     */
    public function setByteSize($byte_size)
    {
        $this->container['byte_size'] = $byte_size;

        return $this;
    }

    /**
     * Gets content
     *
     * @return \SplFileObject|null
     */
    public function getContent()
    {
        return $this->container['content'];
    }

    /**
     * Sets content
     *
     * @param \SplFileObject|null $content (v1.0) The content property for the Dynamics 365 Business Central generalLedgerEntryAttachments entity
     *
     * @return self
     */
    public function setContent($content)
    {
        $this->container['content'] = $content;

        return $this;
    }

    /**
     * Gets created_date_time
     *
     * @return \DateTime|null
     */
    public function getCreatedDateTime()
    {
        return $this->container['created_date_time'];
    }

    /**
     * Sets created_date_time
     *
     * @param \DateTime|null $created_date_time (v1.0) The createdDateTime property for the Dynamics 365 Business Central generalLedgerEntryAttachments entity
     *
     * @return self
     */
    public function setCreatedDateTime($created_date_time)
    {
        $this->container['created_date_time'] = $created_date_time;

        return $this;
    }

    /**
     * Gets general_ledger_entry
     *
     * @return \OpenAPI\Client\Model\GeneralLedgerEntry|null
     */
    public function getGeneralLedgerEntry()
    {
        return $this->container['general_ledger_entry'];
    }

    /**
     * Sets general_ledger_entry
     *
     * @param \OpenAPI\Client\Model\GeneralLedgerEntry|null $general_ledger_entry general_ledger_entry
     *
     * @return self
     */
    public function setGeneralLedgerEntry($general_ledger_entry)
    {
        $this->container['general_ledger_entry'] = $general_ledger_entry;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


