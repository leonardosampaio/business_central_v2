<?php
/**
 * SalesInvoice
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * (v1.0) Dynamics 365 Business Central
 *
 * (v1.0) Business Central Standard APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * SalesInvoice Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class SalesInvoice implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'salesInvoice';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'number' => 'string',
        'external_document_number' => 'string',
        'invoice_date' => '\DateTime',
        'due_date' => '\DateTime',
        'customer_purchase_order_reference' => 'string',
        'customer_id' => 'string',
        'contact_id' => 'string',
        'customer_number' => 'string',
        'customer_name' => 'string',
        'bill_to_name' => 'string',
        'bill_to_customer_id' => 'string',
        'bill_to_customer_number' => 'string',
        'ship_to_name' => 'string',
        'ship_to_contact' => 'string',
        'selling_postal_address' => '\OpenAPI\Client\Model\Postaladdresstype',
        'billing_postal_address' => '\OpenAPI\Client\Model\Postaladdresstype',
        'shipping_postal_address' => '\OpenAPI\Client\Model\Postaladdresstype',
        'currency_id' => 'string',
        'currency_code' => 'string',
        'order_id' => 'string',
        'order_number' => 'string',
        'payment_terms_id' => 'string',
        'shipment_method_id' => 'string',
        'salesperson' => 'string',
        'prices_include_tax' => 'bool',
        'remaining_amount' => 'float',
        'discount_amount' => 'float',
        'discount_applied_before_tax' => 'bool',
        'total_amount_excluding_tax' => 'float',
        'total_tax_amount' => 'float',
        'total_amount_including_tax' => 'float',
        'status' => 'string',
        'last_modified_date_time' => '\DateTime',
        'phone_number' => 'string',
        'email' => 'string',
        'sales_invoice_lines' => '\OpenAPI\Client\Model\SalesInvoiceLine[]',
        'pdf_document' => '\OpenAPI\Client\Model\PdfDocument[]',
        'customer' => '\OpenAPI\Client\Model\Customer',
        'currency' => '\OpenAPI\Client\Model\Currency',
        'payment_term' => '\OpenAPI\Client\Model\PaymentTerm',
        'shipment_method' => '\OpenAPI\Client\Model\ShipmentMethod'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'uuid',
        'number' => null,
        'external_document_number' => null,
        'invoice_date' => 'date-time',
        'due_date' => 'date-time',
        'customer_purchase_order_reference' => null,
        'customer_id' => 'uuid',
        'contact_id' => null,
        'customer_number' => null,
        'customer_name' => null,
        'bill_to_name' => null,
        'bill_to_customer_id' => 'uuid',
        'bill_to_customer_number' => null,
        'ship_to_name' => null,
        'ship_to_contact' => null,
        'selling_postal_address' => null,
        'billing_postal_address' => null,
        'shipping_postal_address' => null,
        'currency_id' => 'uuid',
        'currency_code' => null,
        'order_id' => 'uuid',
        'order_number' => null,
        'payment_terms_id' => 'uuid',
        'shipment_method_id' => 'uuid',
        'salesperson' => null,
        'prices_include_tax' => null,
        'remaining_amount' => 'decimal',
        'discount_amount' => 'decimal',
        'discount_applied_before_tax' => null,
        'total_amount_excluding_tax' => 'decimal',
        'total_tax_amount' => 'decimal',
        'total_amount_including_tax' => 'decimal',
        'status' => null,
        'last_modified_date_time' => 'date-time',
        'phone_number' => null,
        'email' => null,
        'sales_invoice_lines' => null,
        'pdf_document' => null,
        'customer' => null,
        'currency' => null,
        'payment_term' => null,
        'shipment_method' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'number' => 'number',
        'external_document_number' => 'externalDocumentNumber',
        'invoice_date' => 'invoiceDate',
        'due_date' => 'dueDate',
        'customer_purchase_order_reference' => 'customerPurchaseOrderReference',
        'customer_id' => 'customerId',
        'contact_id' => 'contactId',
        'customer_number' => 'customerNumber',
        'customer_name' => 'customerName',
        'bill_to_name' => 'billToName',
        'bill_to_customer_id' => 'billToCustomerId',
        'bill_to_customer_number' => 'billToCustomerNumber',
        'ship_to_name' => 'shipToName',
        'ship_to_contact' => 'shipToContact',
        'selling_postal_address' => 'sellingPostalAddress',
        'billing_postal_address' => 'billingPostalAddress',
        'shipping_postal_address' => 'shippingPostalAddress',
        'currency_id' => 'currencyId',
        'currency_code' => 'currencyCode',
        'order_id' => 'orderId',
        'order_number' => 'orderNumber',
        'payment_terms_id' => 'paymentTermsId',
        'shipment_method_id' => 'shipmentMethodId',
        'salesperson' => 'salesperson',
        'prices_include_tax' => 'pricesIncludeTax',
        'remaining_amount' => 'remainingAmount',
        'discount_amount' => 'discountAmount',
        'discount_applied_before_tax' => 'discountAppliedBeforeTax',
        'total_amount_excluding_tax' => 'totalAmountExcludingTax',
        'total_tax_amount' => 'totalTaxAmount',
        'total_amount_including_tax' => 'totalAmountIncludingTax',
        'status' => 'status',
        'last_modified_date_time' => 'lastModifiedDateTime',
        'phone_number' => 'phoneNumber',
        'email' => 'email',
        'sales_invoice_lines' => 'salesInvoiceLines',
        'pdf_document' => 'pdfDocument',
        'customer' => 'customer',
        'currency' => 'currency',
        'payment_term' => 'paymentTerm',
        'shipment_method' => 'shipmentMethod'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'number' => 'setNumber',
        'external_document_number' => 'setExternalDocumentNumber',
        'invoice_date' => 'setInvoiceDate',
        'due_date' => 'setDueDate',
        'customer_purchase_order_reference' => 'setCustomerPurchaseOrderReference',
        'customer_id' => 'setCustomerId',
        'contact_id' => 'setContactId',
        'customer_number' => 'setCustomerNumber',
        'customer_name' => 'setCustomerName',
        'bill_to_name' => 'setBillToName',
        'bill_to_customer_id' => 'setBillToCustomerId',
        'bill_to_customer_number' => 'setBillToCustomerNumber',
        'ship_to_name' => 'setShipToName',
        'ship_to_contact' => 'setShipToContact',
        'selling_postal_address' => 'setSellingPostalAddress',
        'billing_postal_address' => 'setBillingPostalAddress',
        'shipping_postal_address' => 'setShippingPostalAddress',
        'currency_id' => 'setCurrencyId',
        'currency_code' => 'setCurrencyCode',
        'order_id' => 'setOrderId',
        'order_number' => 'setOrderNumber',
        'payment_terms_id' => 'setPaymentTermsId',
        'shipment_method_id' => 'setShipmentMethodId',
        'salesperson' => 'setSalesperson',
        'prices_include_tax' => 'setPricesIncludeTax',
        'remaining_amount' => 'setRemainingAmount',
        'discount_amount' => 'setDiscountAmount',
        'discount_applied_before_tax' => 'setDiscountAppliedBeforeTax',
        'total_amount_excluding_tax' => 'setTotalAmountExcludingTax',
        'total_tax_amount' => 'setTotalTaxAmount',
        'total_amount_including_tax' => 'setTotalAmountIncludingTax',
        'status' => 'setStatus',
        'last_modified_date_time' => 'setLastModifiedDateTime',
        'phone_number' => 'setPhoneNumber',
        'email' => 'setEmail',
        'sales_invoice_lines' => 'setSalesInvoiceLines',
        'pdf_document' => 'setPdfDocument',
        'customer' => 'setCustomer',
        'currency' => 'setCurrency',
        'payment_term' => 'setPaymentTerm',
        'shipment_method' => 'setShipmentMethod'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'number' => 'getNumber',
        'external_document_number' => 'getExternalDocumentNumber',
        'invoice_date' => 'getInvoiceDate',
        'due_date' => 'getDueDate',
        'customer_purchase_order_reference' => 'getCustomerPurchaseOrderReference',
        'customer_id' => 'getCustomerId',
        'contact_id' => 'getContactId',
        'customer_number' => 'getCustomerNumber',
        'customer_name' => 'getCustomerName',
        'bill_to_name' => 'getBillToName',
        'bill_to_customer_id' => 'getBillToCustomerId',
        'bill_to_customer_number' => 'getBillToCustomerNumber',
        'ship_to_name' => 'getShipToName',
        'ship_to_contact' => 'getShipToContact',
        'selling_postal_address' => 'getSellingPostalAddress',
        'billing_postal_address' => 'getBillingPostalAddress',
        'shipping_postal_address' => 'getShippingPostalAddress',
        'currency_id' => 'getCurrencyId',
        'currency_code' => 'getCurrencyCode',
        'order_id' => 'getOrderId',
        'order_number' => 'getOrderNumber',
        'payment_terms_id' => 'getPaymentTermsId',
        'shipment_method_id' => 'getShipmentMethodId',
        'salesperson' => 'getSalesperson',
        'prices_include_tax' => 'getPricesIncludeTax',
        'remaining_amount' => 'getRemainingAmount',
        'discount_amount' => 'getDiscountAmount',
        'discount_applied_before_tax' => 'getDiscountAppliedBeforeTax',
        'total_amount_excluding_tax' => 'getTotalAmountExcludingTax',
        'total_tax_amount' => 'getTotalTaxAmount',
        'total_amount_including_tax' => 'getTotalAmountIncludingTax',
        'status' => 'getStatus',
        'last_modified_date_time' => 'getLastModifiedDateTime',
        'phone_number' => 'getPhoneNumber',
        'email' => 'getEmail',
        'sales_invoice_lines' => 'getSalesInvoiceLines',
        'pdf_document' => 'getPdfDocument',
        'customer' => 'getCustomer',
        'currency' => 'getCurrency',
        'payment_term' => 'getPaymentTerm',
        'shipment_method' => 'getShipmentMethod'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['number'] = $data['number'] ?? null;
        $this->container['external_document_number'] = $data['external_document_number'] ?? null;
        $this->container['invoice_date'] = $data['invoice_date'] ?? null;
        $this->container['due_date'] = $data['due_date'] ?? null;
        $this->container['customer_purchase_order_reference'] = $data['customer_purchase_order_reference'] ?? null;
        $this->container['customer_id'] = $data['customer_id'] ?? null;
        $this->container['contact_id'] = $data['contact_id'] ?? null;
        $this->container['customer_number'] = $data['customer_number'] ?? null;
        $this->container['customer_name'] = $data['customer_name'] ?? null;
        $this->container['bill_to_name'] = $data['bill_to_name'] ?? null;
        $this->container['bill_to_customer_id'] = $data['bill_to_customer_id'] ?? null;
        $this->container['bill_to_customer_number'] = $data['bill_to_customer_number'] ?? null;
        $this->container['ship_to_name'] = $data['ship_to_name'] ?? null;
        $this->container['ship_to_contact'] = $data['ship_to_contact'] ?? null;
        $this->container['selling_postal_address'] = $data['selling_postal_address'] ?? null;
        $this->container['billing_postal_address'] = $data['billing_postal_address'] ?? null;
        $this->container['shipping_postal_address'] = $data['shipping_postal_address'] ?? null;
        $this->container['currency_id'] = $data['currency_id'] ?? null;
        $this->container['currency_code'] = $data['currency_code'] ?? null;
        $this->container['order_id'] = $data['order_id'] ?? null;
        $this->container['order_number'] = $data['order_number'] ?? null;
        $this->container['payment_terms_id'] = $data['payment_terms_id'] ?? null;
        $this->container['shipment_method_id'] = $data['shipment_method_id'] ?? null;
        $this->container['salesperson'] = $data['salesperson'] ?? null;
        $this->container['prices_include_tax'] = $data['prices_include_tax'] ?? null;
        $this->container['remaining_amount'] = $data['remaining_amount'] ?? null;
        $this->container['discount_amount'] = $data['discount_amount'] ?? null;
        $this->container['discount_applied_before_tax'] = $data['discount_applied_before_tax'] ?? null;
        $this->container['total_amount_excluding_tax'] = $data['total_amount_excluding_tax'] ?? null;
        $this->container['total_tax_amount'] = $data['total_tax_amount'] ?? null;
        $this->container['total_amount_including_tax'] = $data['total_amount_including_tax'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['last_modified_date_time'] = $data['last_modified_date_time'] ?? null;
        $this->container['phone_number'] = $data['phone_number'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['sales_invoice_lines'] = $data['sales_invoice_lines'] ?? null;
        $this->container['pdf_document'] = $data['pdf_document'] ?? null;
        $this->container['customer'] = $data['customer'] ?? null;
        $this->container['currency'] = $data['currency'] ?? null;
        $this->container['payment_term'] = $data['payment_term'] ?? null;
        $this->container['shipment_method'] = $data['shipment_method'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['number']) && (mb_strlen($this->container['number']) > 20)) {
            $invalidProperties[] = "invalid value for 'number', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['external_document_number']) && (mb_strlen($this->container['external_document_number']) > 35)) {
            $invalidProperties[] = "invalid value for 'external_document_number', the character length must be smaller than or equal to 35.";
        }

        if (!is_null($this->container['customer_purchase_order_reference']) && (mb_strlen($this->container['customer_purchase_order_reference']) > 35)) {
            $invalidProperties[] = "invalid value for 'customer_purchase_order_reference', the character length must be smaller than or equal to 35.";
        }

        if (!is_null($this->container['contact_id']) && (mb_strlen($this->container['contact_id']) > 250)) {
            $invalidProperties[] = "invalid value for 'contact_id', the character length must be smaller than or equal to 250.";
        }

        if (!is_null($this->container['customer_number']) && (mb_strlen($this->container['customer_number']) > 20)) {
            $invalidProperties[] = "invalid value for 'customer_number', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['customer_name']) && (mb_strlen($this->container['customer_name']) > 100)) {
            $invalidProperties[] = "invalid value for 'customer_name', the character length must be smaller than or equal to 100.";
        }

        if (!is_null($this->container['bill_to_name']) && (mb_strlen($this->container['bill_to_name']) > 100)) {
            $invalidProperties[] = "invalid value for 'bill_to_name', the character length must be smaller than or equal to 100.";
        }

        if (!is_null($this->container['bill_to_customer_number']) && (mb_strlen($this->container['bill_to_customer_number']) > 20)) {
            $invalidProperties[] = "invalid value for 'bill_to_customer_number', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['ship_to_name']) && (mb_strlen($this->container['ship_to_name']) > 100)) {
            $invalidProperties[] = "invalid value for 'ship_to_name', the character length must be smaller than or equal to 100.";
        }

        if (!is_null($this->container['ship_to_contact']) && (mb_strlen($this->container['ship_to_contact']) > 100)) {
            $invalidProperties[] = "invalid value for 'ship_to_contact', the character length must be smaller than or equal to 100.";
        }

        if (!is_null($this->container['order_number']) && (mb_strlen($this->container['order_number']) > 20)) {
            $invalidProperties[] = "invalid value for 'order_number', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['salesperson']) && (mb_strlen($this->container['salesperson']) > 20)) {
            $invalidProperties[] = "invalid value for 'salesperson', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['phone_number']) && (mb_strlen($this->container['phone_number']) > 30)) {
            $invalidProperties[] = "invalid value for 'phone_number', the character length must be smaller than or equal to 30.";
        }

        if (!is_null($this->container['email']) && (mb_strlen($this->container['email']) > 80)) {
            $invalidProperties[] = "invalid value for 'email', the character length must be smaller than or equal to 80.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id (v1.0) The id property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets number
     *
     * @return string|null
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     *
     * @param string|null $number (v1.0) The number property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setNumber($number)
    {
        if (!is_null($number) && (mb_strlen($number) > 20)) {
            throw new \InvalidArgumentException('invalid length for $number when calling SalesInvoice., must be smaller than or equal to 20.');
        }

        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets external_document_number
     *
     * @return string|null
     */
    public function getExternalDocumentNumber()
    {
        return $this->container['external_document_number'];
    }

    /**
     * Sets external_document_number
     *
     * @param string|null $external_document_number (v1.0) The externalDocumentNumber property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setExternalDocumentNumber($external_document_number)
    {
        if (!is_null($external_document_number) && (mb_strlen($external_document_number) > 35)) {
            throw new \InvalidArgumentException('invalid length for $external_document_number when calling SalesInvoice., must be smaller than or equal to 35.');
        }

        $this->container['external_document_number'] = $external_document_number;

        return $this;
    }

    /**
     * Gets invoice_date
     *
     * @return \DateTime|null
     */
    public function getInvoiceDate()
    {
        return $this->container['invoice_date'];
    }

    /**
     * Sets invoice_date
     *
     * @param \DateTime|null $invoice_date (v1.0) The invoiceDate property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setInvoiceDate($invoice_date)
    {
        $this->container['invoice_date'] = $invoice_date;

        return $this;
    }

    /**
     * Gets due_date
     *
     * @return \DateTime|null
     */
    public function getDueDate()
    {
        return $this->container['due_date'];
    }

    /**
     * Sets due_date
     *
     * @param \DateTime|null $due_date (v1.0) The dueDate property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setDueDate($due_date)
    {
        $this->container['due_date'] = $due_date;

        return $this;
    }

    /**
     * Gets customer_purchase_order_reference
     *
     * @return string|null
     */
    public function getCustomerPurchaseOrderReference()
    {
        return $this->container['customer_purchase_order_reference'];
    }

    /**
     * Sets customer_purchase_order_reference
     *
     * @param string|null $customer_purchase_order_reference (v1.0) The customerPurchaseOrderReference property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setCustomerPurchaseOrderReference($customer_purchase_order_reference)
    {
        if (!is_null($customer_purchase_order_reference) && (mb_strlen($customer_purchase_order_reference) > 35)) {
            throw new \InvalidArgumentException('invalid length for $customer_purchase_order_reference when calling SalesInvoice., must be smaller than or equal to 35.');
        }

        $this->container['customer_purchase_order_reference'] = $customer_purchase_order_reference;

        return $this;
    }

    /**
     * Gets customer_id
     *
     * @return string|null
     */
    public function getCustomerId()
    {
        return $this->container['customer_id'];
    }

    /**
     * Sets customer_id
     *
     * @param string|null $customer_id (v1.0) The customerId property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setCustomerId($customer_id)
    {
        $this->container['customer_id'] = $customer_id;

        return $this;
    }

    /**
     * Gets contact_id
     *
     * @return string|null
     */
    public function getContactId()
    {
        return $this->container['contact_id'];
    }

    /**
     * Sets contact_id
     *
     * @param string|null $contact_id (v1.0) The contactId property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setContactId($contact_id)
    {
        if (!is_null($contact_id) && (mb_strlen($contact_id) > 250)) {
            throw new \InvalidArgumentException('invalid length for $contact_id when calling SalesInvoice., must be smaller than or equal to 250.');
        }

        $this->container['contact_id'] = $contact_id;

        return $this;
    }

    /**
     * Gets customer_number
     *
     * @return string|null
     */
    public function getCustomerNumber()
    {
        return $this->container['customer_number'];
    }

    /**
     * Sets customer_number
     *
     * @param string|null $customer_number (v1.0) The customerNumber property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setCustomerNumber($customer_number)
    {
        if (!is_null($customer_number) && (mb_strlen($customer_number) > 20)) {
            throw new \InvalidArgumentException('invalid length for $customer_number when calling SalesInvoice., must be smaller than or equal to 20.');
        }

        $this->container['customer_number'] = $customer_number;

        return $this;
    }

    /**
     * Gets customer_name
     *
     * @return string|null
     */
    public function getCustomerName()
    {
        return $this->container['customer_name'];
    }

    /**
     * Sets customer_name
     *
     * @param string|null $customer_name (v1.0) The customerName property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setCustomerName($customer_name)
    {
        if (!is_null($customer_name) && (mb_strlen($customer_name) > 100)) {
            throw new \InvalidArgumentException('invalid length for $customer_name when calling SalesInvoice., must be smaller than or equal to 100.');
        }

        $this->container['customer_name'] = $customer_name;

        return $this;
    }

    /**
     * Gets bill_to_name
     *
     * @return string|null
     */
    public function getBillToName()
    {
        return $this->container['bill_to_name'];
    }

    /**
     * Sets bill_to_name
     *
     * @param string|null $bill_to_name (v1.0) The billToName property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setBillToName($bill_to_name)
    {
        if (!is_null($bill_to_name) && (mb_strlen($bill_to_name) > 100)) {
            throw new \InvalidArgumentException('invalid length for $bill_to_name when calling SalesInvoice., must be smaller than or equal to 100.');
        }

        $this->container['bill_to_name'] = $bill_to_name;

        return $this;
    }

    /**
     * Gets bill_to_customer_id
     *
     * @return string|null
     */
    public function getBillToCustomerId()
    {
        return $this->container['bill_to_customer_id'];
    }

    /**
     * Sets bill_to_customer_id
     *
     * @param string|null $bill_to_customer_id (v1.0) The billToCustomerId property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setBillToCustomerId($bill_to_customer_id)
    {
        $this->container['bill_to_customer_id'] = $bill_to_customer_id;

        return $this;
    }

    /**
     * Gets bill_to_customer_number
     *
     * @return string|null
     */
    public function getBillToCustomerNumber()
    {
        return $this->container['bill_to_customer_number'];
    }

    /**
     * Sets bill_to_customer_number
     *
     * @param string|null $bill_to_customer_number (v1.0) The billToCustomerNumber property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setBillToCustomerNumber($bill_to_customer_number)
    {
        if (!is_null($bill_to_customer_number) && (mb_strlen($bill_to_customer_number) > 20)) {
            throw new \InvalidArgumentException('invalid length for $bill_to_customer_number when calling SalesInvoice., must be smaller than or equal to 20.');
        }

        $this->container['bill_to_customer_number'] = $bill_to_customer_number;

        return $this;
    }

    /**
     * Gets ship_to_name
     *
     * @return string|null
     */
    public function getShipToName()
    {
        return $this->container['ship_to_name'];
    }

    /**
     * Sets ship_to_name
     *
     * @param string|null $ship_to_name (v1.0) The shipToName property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setShipToName($ship_to_name)
    {
        if (!is_null($ship_to_name) && (mb_strlen($ship_to_name) > 100)) {
            throw new \InvalidArgumentException('invalid length for $ship_to_name when calling SalesInvoice., must be smaller than or equal to 100.');
        }

        $this->container['ship_to_name'] = $ship_to_name;

        return $this;
    }

    /**
     * Gets ship_to_contact
     *
     * @return string|null
     */
    public function getShipToContact()
    {
        return $this->container['ship_to_contact'];
    }

    /**
     * Sets ship_to_contact
     *
     * @param string|null $ship_to_contact (v1.0) The shipToContact property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setShipToContact($ship_to_contact)
    {
        if (!is_null($ship_to_contact) && (mb_strlen($ship_to_contact) > 100)) {
            throw new \InvalidArgumentException('invalid length for $ship_to_contact when calling SalesInvoice., must be smaller than or equal to 100.');
        }

        $this->container['ship_to_contact'] = $ship_to_contact;

        return $this;
    }

    /**
     * Gets selling_postal_address
     *
     * @return \OpenAPI\Client\Model\Postaladdresstype|null
     */
    public function getSellingPostalAddress()
    {
        return $this->container['selling_postal_address'];
    }

    /**
     * Sets selling_postal_address
     *
     * @param \OpenAPI\Client\Model\Postaladdresstype|null $selling_postal_address selling_postal_address
     *
     * @return self
     */
    public function setSellingPostalAddress($selling_postal_address)
    {
        $this->container['selling_postal_address'] = $selling_postal_address;

        return $this;
    }

    /**
     * Gets billing_postal_address
     *
     * @return \OpenAPI\Client\Model\Postaladdresstype|null
     */
    public function getBillingPostalAddress()
    {
        return $this->container['billing_postal_address'];
    }

    /**
     * Sets billing_postal_address
     *
     * @param \OpenAPI\Client\Model\Postaladdresstype|null $billing_postal_address billing_postal_address
     *
     * @return self
     */
    public function setBillingPostalAddress($billing_postal_address)
    {
        $this->container['billing_postal_address'] = $billing_postal_address;

        return $this;
    }

    /**
     * Gets shipping_postal_address
     *
     * @return \OpenAPI\Client\Model\Postaladdresstype|null
     */
    public function getShippingPostalAddress()
    {
        return $this->container['shipping_postal_address'];
    }

    /**
     * Sets shipping_postal_address
     *
     * @param \OpenAPI\Client\Model\Postaladdresstype|null $shipping_postal_address shipping_postal_address
     *
     * @return self
     */
    public function setShippingPostalAddress($shipping_postal_address)
    {
        $this->container['shipping_postal_address'] = $shipping_postal_address;

        return $this;
    }

    /**
     * Gets currency_id
     *
     * @return string|null
     */
    public function getCurrencyId()
    {
        return $this->container['currency_id'];
    }

    /**
     * Sets currency_id
     *
     * @param string|null $currency_id (v1.0) The currencyId property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setCurrencyId($currency_id)
    {
        $this->container['currency_id'] = $currency_id;

        return $this;
    }

    /**
     * Gets currency_code
     *
     * @return string|null
     */
    public function getCurrencyCode()
    {
        return $this->container['currency_code'];
    }

    /**
     * Sets currency_code
     *
     * @param string|null $currency_code (v1.0) The currencyCode property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setCurrencyCode($currency_code)
    {
        $this->container['currency_code'] = $currency_code;

        return $this;
    }

    /**
     * Gets order_id
     *
     * @return string|null
     */
    public function getOrderId()
    {
        return $this->container['order_id'];
    }

    /**
     * Sets order_id
     *
     * @param string|null $order_id (v1.0) The orderId property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setOrderId($order_id)
    {
        $this->container['order_id'] = $order_id;

        return $this;
    }

    /**
     * Gets order_number
     *
     * @return string|null
     */
    public function getOrderNumber()
    {
        return $this->container['order_number'];
    }

    /**
     * Sets order_number
     *
     * @param string|null $order_number (v1.0) The orderNumber property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setOrderNumber($order_number)
    {
        if (!is_null($order_number) && (mb_strlen($order_number) > 20)) {
            throw new \InvalidArgumentException('invalid length for $order_number when calling SalesInvoice., must be smaller than or equal to 20.');
        }

        $this->container['order_number'] = $order_number;

        return $this;
    }

    /**
     * Gets payment_terms_id
     *
     * @return string|null
     */
    public function getPaymentTermsId()
    {
        return $this->container['payment_terms_id'];
    }

    /**
     * Sets payment_terms_id
     *
     * @param string|null $payment_terms_id (v1.0) The paymentTermsId property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setPaymentTermsId($payment_terms_id)
    {
        $this->container['payment_terms_id'] = $payment_terms_id;

        return $this;
    }

    /**
     * Gets shipment_method_id
     *
     * @return string|null
     */
    public function getShipmentMethodId()
    {
        return $this->container['shipment_method_id'];
    }

    /**
     * Sets shipment_method_id
     *
     * @param string|null $shipment_method_id (v1.0) The shipmentMethodId property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setShipmentMethodId($shipment_method_id)
    {
        $this->container['shipment_method_id'] = $shipment_method_id;

        return $this;
    }

    /**
     * Gets salesperson
     *
     * @return string|null
     */
    public function getSalesperson()
    {
        return $this->container['salesperson'];
    }

    /**
     * Sets salesperson
     *
     * @param string|null $salesperson (v1.0) The salesperson property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setSalesperson($salesperson)
    {
        if (!is_null($salesperson) && (mb_strlen($salesperson) > 20)) {
            throw new \InvalidArgumentException('invalid length for $salesperson when calling SalesInvoice., must be smaller than or equal to 20.');
        }

        $this->container['salesperson'] = $salesperson;

        return $this;
    }

    /**
     * Gets prices_include_tax
     *
     * @return bool|null
     */
    public function getPricesIncludeTax()
    {
        return $this->container['prices_include_tax'];
    }

    /**
     * Sets prices_include_tax
     *
     * @param bool|null $prices_include_tax (v1.0) The pricesIncludeTax property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setPricesIncludeTax($prices_include_tax)
    {
        $this->container['prices_include_tax'] = $prices_include_tax;

        return $this;
    }

    /**
     * Gets remaining_amount
     *
     * @return float|null
     */
    public function getRemainingAmount()
    {
        return $this->container['remaining_amount'];
    }

    /**
     * Sets remaining_amount
     *
     * @param float|null $remaining_amount (v1.0) The remainingAmount property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setRemainingAmount($remaining_amount)
    {
        $this->container['remaining_amount'] = $remaining_amount;

        return $this;
    }

    /**
     * Gets discount_amount
     *
     * @return float|null
     */
    public function getDiscountAmount()
    {
        return $this->container['discount_amount'];
    }

    /**
     * Sets discount_amount
     *
     * @param float|null $discount_amount (v1.0) The discountAmount property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setDiscountAmount($discount_amount)
    {
        $this->container['discount_amount'] = $discount_amount;

        return $this;
    }

    /**
     * Gets discount_applied_before_tax
     *
     * @return bool|null
     */
    public function getDiscountAppliedBeforeTax()
    {
        return $this->container['discount_applied_before_tax'];
    }

    /**
     * Sets discount_applied_before_tax
     *
     * @param bool|null $discount_applied_before_tax (v1.0) The discountAppliedBeforeTax property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setDiscountAppliedBeforeTax($discount_applied_before_tax)
    {
        $this->container['discount_applied_before_tax'] = $discount_applied_before_tax;

        return $this;
    }

    /**
     * Gets total_amount_excluding_tax
     *
     * @return float|null
     */
    public function getTotalAmountExcludingTax()
    {
        return $this->container['total_amount_excluding_tax'];
    }

    /**
     * Sets total_amount_excluding_tax
     *
     * @param float|null $total_amount_excluding_tax (v1.0) The totalAmountExcludingTax property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setTotalAmountExcludingTax($total_amount_excluding_tax)
    {
        $this->container['total_amount_excluding_tax'] = $total_amount_excluding_tax;

        return $this;
    }

    /**
     * Gets total_tax_amount
     *
     * @return float|null
     */
    public function getTotalTaxAmount()
    {
        return $this->container['total_tax_amount'];
    }

    /**
     * Sets total_tax_amount
     *
     * @param float|null $total_tax_amount (v1.0) The totalTaxAmount property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setTotalTaxAmount($total_tax_amount)
    {
        $this->container['total_tax_amount'] = $total_tax_amount;

        return $this;
    }

    /**
     * Gets total_amount_including_tax
     *
     * @return float|null
     */
    public function getTotalAmountIncludingTax()
    {
        return $this->container['total_amount_including_tax'];
    }

    /**
     * Sets total_amount_including_tax
     *
     * @param float|null $total_amount_including_tax (v1.0) The totalAmountIncludingTax property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setTotalAmountIncludingTax($total_amount_including_tax)
    {
        $this->container['total_amount_including_tax'] = $total_amount_including_tax;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string|null $status (v1.0) The status property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets last_modified_date_time
     *
     * @return \DateTime|null
     */
    public function getLastModifiedDateTime()
    {
        return $this->container['last_modified_date_time'];
    }

    /**
     * Sets last_modified_date_time
     *
     * @param \DateTime|null $last_modified_date_time (v1.0) The lastModifiedDateTime property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setLastModifiedDateTime($last_modified_date_time)
    {
        $this->container['last_modified_date_time'] = $last_modified_date_time;

        return $this;
    }

    /**
     * Gets phone_number
     *
     * @return string|null
     */
    public function getPhoneNumber()
    {
        return $this->container['phone_number'];
    }

    /**
     * Sets phone_number
     *
     * @param string|null $phone_number (v1.0) The phoneNumber property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setPhoneNumber($phone_number)
    {
        if (!is_null($phone_number) && (mb_strlen($phone_number) > 30)) {
            throw new \InvalidArgumentException('invalid length for $phone_number when calling SalesInvoice., must be smaller than or equal to 30.');
        }

        $this->container['phone_number'] = $phone_number;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email (v1.0) The email property for the Dynamics 365 Business Central salesInvoice entity
     *
     * @return self
     */
    public function setEmail($email)
    {
        if (!is_null($email) && (mb_strlen($email) > 80)) {
            throw new \InvalidArgumentException('invalid length for $email when calling SalesInvoice., must be smaller than or equal to 80.');
        }

        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets sales_invoice_lines
     *
     * @return \OpenAPI\Client\Model\SalesInvoiceLine[]|null
     */
    public function getSalesInvoiceLines()
    {
        return $this->container['sales_invoice_lines'];
    }

    /**
     * Sets sales_invoice_lines
     *
     * @param \OpenAPI\Client\Model\SalesInvoiceLine[]|null $sales_invoice_lines sales_invoice_lines
     *
     * @return self
     */
    public function setSalesInvoiceLines($sales_invoice_lines)
    {
        $this->container['sales_invoice_lines'] = $sales_invoice_lines;

        return $this;
    }

    /**
     * Gets pdf_document
     *
     * @return \OpenAPI\Client\Model\PdfDocument[]|null
     */
    public function getPdfDocument()
    {
        return $this->container['pdf_document'];
    }

    /**
     * Sets pdf_document
     *
     * @param \OpenAPI\Client\Model\PdfDocument[]|null $pdf_document pdf_document
     *
     * @return self
     */
    public function setPdfDocument($pdf_document)
    {
        $this->container['pdf_document'] = $pdf_document;

        return $this;
    }

    /**
     * Gets customer
     *
     * @return \OpenAPI\Client\Model\Customer|null
     */
    public function getCustomer()
    {
        return $this->container['customer'];
    }

    /**
     * Sets customer
     *
     * @param \OpenAPI\Client\Model\Customer|null $customer customer
     *
     * @return self
     */
    public function setCustomer($customer)
    {
        $this->container['customer'] = $customer;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return \OpenAPI\Client\Model\Currency|null
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param \OpenAPI\Client\Model\Currency|null $currency currency
     *
     * @return self
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets payment_term
     *
     * @return \OpenAPI\Client\Model\PaymentTerm|null
     */
    public function getPaymentTerm()
    {
        return $this->container['payment_term'];
    }

    /**
     * Sets payment_term
     *
     * @param \OpenAPI\Client\Model\PaymentTerm|null $payment_term payment_term
     *
     * @return self
     */
    public function setPaymentTerm($payment_term)
    {
        $this->container['payment_term'] = $payment_term;

        return $this;
    }

    /**
     * Gets shipment_method
     *
     * @return \OpenAPI\Client\Model\ShipmentMethod|null
     */
    public function getShipmentMethod()
    {
        return $this->container['shipment_method'];
    }

    /**
     * Sets shipment_method
     *
     * @param \OpenAPI\Client\Model\ShipmentMethod|null $shipment_method shipment_method
     *
     * @return self
     */
    public function setShipmentMethod($shipment_method)
    {
        $this->container['shipment_method'] = $shipment_method;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


